//Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

 

Example 1:

Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Example 2:

Input: n = 1
Output: ["()"]

class Solution {
public:
    void generate(vector<string>&ans,int n,int open,int close,string gen)
    {
        if(gen.size()==n*2)
        {
            ans.push_back(gen);
            return;
        }
        if(open<n)
        generate(ans,n,open+1,close,gen+"(");
        if(close<open)
        generate(ans,n,open,close+1,gen+")");
    }
    vector<string> generateParenthesis(int n) {
    vector<string>ans;
    generate(ans,n,0,0,"");
    return ans;       
    }
};